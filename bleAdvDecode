-- 注册一个自定义协议
local mybleproto = Proto("mybleproto", "My BLE Packet Parser")

-- 这里定义需要的字段（Field）引用
-- Wireshark 内置字段可以通过 Field.new("字段名称") 的方式获取
local f_btle_advertising_addr = Field.new("btle.advertising_address")
local f_btle_pdu_data         = Field.new("btle.payload")  -- 原始PDU数据

-- 在Wireshark中Info列追加显示时，用到的ProtoFields（可选，若只是要简单追加Info可以不定义）
mybleproto.fields = {}

-- dissector主函数
function mybleproto.dissector(buffer, pinfo, tree)
    -- 1. 获取已经解析好的 BLE 广播地址字段
    local addr = f_btle_advertising_addr()
    if not addr then
        return  -- 如果没有取到地址，就直接返回
    end

    -- 2. 判断是否是目标地址
    local addr_str = tostring(addr) -- 转成字符串
    if addr_str == "00:02:72:32:80:C6" then
        -- 命中目标地址，则开始检索目标 GAP code (0xC4)

        -- 将协议名称显示在 Protocol 栏
        pinfo.cols.protocol:set("MY_BLE")

        -- 3. 获取整个PDU负载(已经由btle.payload字段解析的原始字节)
        local pdu_data = f_btle_pdu_data()
        if pdu_data then
            local tvb = ByteArray.tvb(pdu_data.range:bytes(), "BLE PDU Data")

            -- 在 PDU 数据中搜索 0xC4
            local found_offset = -1
            for i=0, tvb:len()-1 do
                if tvb:range(i, 1):uint() == 0xC4 then
                    found_offset = i
                    break
                end
            end

            -- 若找到了 0xC4
            if found_offset >= 0 then
                pinfo.cols.info:append(" [Found GAP code 0xC4 at offset " .. found_offset .. "]")
            else
                -- 如果需要提示未找到也可以做类似处理
                -- pinfo.cols.info:append(" [GAP code 0xC4 not found]")
            end
        end
    end
end

--------------------------------------------------------------------
-- 下面开始注册 dissector
--------------------------------------------------------------------

-- 获取蓝牙LE链路层（WTAP_ENCAP_BLUETOOTH_LE_LL）的DissectorTable
-- 有时不同的 Wireshark 版本封装可能略有不同，如果注册地点不对，可以尝试其它表。
local wtap_encap_table = DissectorTable.get("wtap_encap")

-- WTAP_ENCAP_BLUETOOTH_LE_LL 一般是 251 (可以据 Wireshark 版本而异)
-- 也可以直接用枚举名称 wtap["WTAP_ENCAP_BLUETOOTH_LE_LL"] 来尝试
local BLUETOOTH_LE_LL = 251

-- 将我们的 mybleproto 加入到 BLE LL 的解析中
wtap_encap_table:add(BLUETOOTH_LE_LL, mybleproto)

-- 脚本结束